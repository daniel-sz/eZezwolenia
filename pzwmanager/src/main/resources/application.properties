# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.url=jdbc:postgresql://localhost:5432/test
spring.datasource.username=postgres
spring.datasource.password=ENC(mzz+lDg3VVo/v7ZKTD3VIIq8Xk4IB3jtXafm+10RvmtMdS8HYpWNCvzzGTSSomvQ)

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
#spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialectPostgreSQLDialect

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# = Passed as hibernate.hbm2ddl.auto
# ==============================================================
# TODO - change for production to none
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=none

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select email, password, active from users where email=?
#spring.queries.roles-query=select u.email, r.role from users u inner join user_role ur on(u.user_id=ur.user_id) inner join roles r on(ur.role_id=r.role_id) where u.email=?

## ==============================================================
## = Initialize the database using data.sql script
## ==============================================================
spring.datasource.initialization-mode=always

# ==============================================================
# = Thymeleaf config
# ==============================================================
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

server.port=8888

# JASYPT config
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.RandomIvGenerator
jasypt.encryptor.algorithm=PBEWITHHMACSHA256ANDAES_256

# Email config
spring.mail.host=smtp.wp.pl
spring.mail.port=587
spring.mail.username=pzwkudowa@wp.pl
spring.mail.password=ENC(wCoG9FKSXycLaApLKnl04fG0S6gfv3O2T36VxfV+GIc6n8v7e9rB+yllVtkDJLqOUknRNbYTH6IUG7Jm/m05lbYv+A7MBhZ9zGHbEO09Gyk=)
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
